// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview A jewelry recommendation AI agent.
 *
 * - jewelryRecommendation - A function that handles the jewelry recommendation process.
 * - JewelryRecommendationInput - The input type for the jewelryRecommendation function.
 * - JewelryRecommendationOutput - The return type for the jewelryRecommendation function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const JewelryRecommendationInputSchema = z.object({
  browsingHistory: z
    .string()
    .describe('The browsing history of the user, as a string.'),
  inventory: z
    .string()
    .describe('The inventory of the jewelry shop, as a string.'),
});
export type JewelryRecommendationInput = z.infer<typeof JewelryRecommendationInputSchema>;

const JewelryRecommendationOutputSchema = z.object({
  recommendations: z
    .string()
    .describe('The personalized jewelry recommendations for the user.'),
});
export type JewelryRecommendationOutput = z.infer<typeof JewelryRecommendationOutputSchema>;

export async function jewelryRecommendation(
  input: JewelryRecommendationInput
): Promise<JewelryRecommendationOutput> {
  return jewelryRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'jewelryRecommendationPrompt',
  input: {schema: JewelryRecommendationInputSchema},
  output: {schema: JewelryRecommendationOutputSchema},
  prompt: `You are an expert jewelry recommender. Given the browsing history of the user and the inventory of the jewelry shop, you will provide personalized jewelry recommendations for the user.

Browsing History: {{{browsingHistory}}}
Inventory: {{{inventory}}}

Recommendations: `,
});

const jewelryRecommendationFlow = ai.defineFlow(
  {
    name: 'jewelryRecommendationFlow',
    inputSchema: JewelryRecommendationInputSchema,
    outputSchema: JewelryRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
